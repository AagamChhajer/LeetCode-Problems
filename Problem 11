// https://leetcode.com/problems/container-with-most-water/

 int maxArea(vector<int>& height) {
        vector<int> area;
        int n = height.size(),a1 = 0,max = 0;
        for(int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                if(height.at(i) < height.at(j)){
                a1 =  height.at(i) * (j-i); 
                }
                else{
                    a1 = height.at(j) * (j-i);
                }
                if(a1 > max){
                    max = a1;
                }
            }
        }
    return max;
    }


//CORRECT SOLUTION WITH TL O(n)

int maxArea(vector<int>& height) {
    int water = 0;
    int i = 0, j = height.size() - 1;
    while (i < j) {
        int h = min(height[i], height[j]);
        water = max(water, (j - i) * h);
        while (height[i] <= h && i < j) i++;
        while (height[j] <= h && i < j) j--;
    }
    return water;
}
